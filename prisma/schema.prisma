generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id               Int                @id @default(autoincrement())
  name             String
  email            String             @unique
  password         String
  posts            Post[]
  role             String             @default("GUEST")
  comments         Comment[]
  bookmark         Bookmark[]
  userCommentQuota UserCommentQuota[]
  orders           Orders[]
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String
  content    String
  metadata   Json?
  authorId   Int
  author     User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments   Comment[]
  categoryId Int
  category   Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  bookmark   Bookmark[]
  postNumber Int        @default(autoincrement())
  Reviews    Rating[]
}

model Comment {
  id      Int      @id @default(autoincrement())
  content String
  postId  Int
  post    Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId  Int
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Reviews Rating[]
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String
  path     String
  posts    Post[]
  bookmark Bookmark[]
}

model Bookmark {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId     Int
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  page       Int

  @@unique(fields: [userId, categoryId], name: "userCategory")
}

model UserCommentQuota {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  quota  Int
}

model Orders {
  id      Int     @id @default(autoincrement())
  userId  Int
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderId String
  product String
  price   Decimal
}

model Settings {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String
}

model Rating {
  id Int @id @default(autoincrement())

  rating Int

  postId    Int?
  Post      Post?    @relation(fields: [postId], references: [id])
  commentId Int?
  Comment   Comment? @relation(fields: [commentId], references: [id])
}
